# vim: ft=jam: sw=2:

local library = sk.sys ;

local objects = 
  ProcessLaunchException.cc
  AbstractProcessListener.cc
  DelegatingExecutable.cc
  PipeProcess.cc
  Pipeline.cc
  Group.cc
  Process.cc
  StreamPortal.cc
;

make-library $(library) : $(objects) ;
make-subdir test ;

local PLATFORM_IMPLEMENTATION = $(PLATFORM_IMPLEMENTATION) ;
if $(PLATFORM_IMPLEMENTATION) = "unix" && mks32 in $(project.PLATFORM_SPECIFICS) {
  PLATFORM_IMPLEMENTATION = mks32 ;
}

make-subdirs $(PLATFORM_IMPLEMENTATION) ;
add-project-library $(library) : $(library).$(PLATFORM_IMPLEMENTATION) ;

probes = 
  user-probe
;

if ! windows in $(project.PLATFORM_SPECIFICS) {
  use-project-library $(probes) : 
    sk.sys 
    sk.rt.thread
    sk.rt.thread.pthreads
    sk.rt.bundle 
    sk.io 
    sk.util 
  ;
  use-pthreads $(probes) ;
}
else use-project-library $(probes) : 
    sk.sys 
    sk.rt.thread
    sk.rt.thread.win32
    sk.rt.bundle 
    sk.io 
    sk.util 
;

local _probe ;
for _probe in $(probes) {
  make-program $(_probe) : $(_probe).cc ;
}
